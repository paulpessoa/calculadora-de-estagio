import Head from 'next/head'
import React, { useState } from 'react';
import { useColorMode, useColorModeValue, Box, FormControl, FormLabel, Input, InputGroup, InputLeftAddon, Button, IconButton, Text, Flex, Icon } from '@chakra-ui/react';
import { FaShareAlt, FaGithub, FaTwitter, FaMoon, FaSun } from 'react-icons/fa';

const hoje = new Date();
const dataInicialPadrao = new Date(hoje.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString().substr(0, 10); // 30 dias anteriores
const dataFinalPadrao = hoje.toISOString().substr(0, 10); // dia atual

export default function Home() {
  const { colorMode, toggleColorMode } = useColorMode();
  const isDarkMode = colorMode === 'dark';

  const [inicioEstagio, setInicioEstagio] = useState(dataInicialPadrao);
  const [fimEstagio, setFimEstagio] = useState(dataFinalPadrao);
  const [valorBolsa, setValorBolsa] = useState(0);
  const [diasEstagiados, setDiasEstagiados] = useState(0);
  const [diasDeRecesso, setDiasDeRecesso] = useState(0);
  const [previsaoBolsaRecesso, setPrevisaoBolsaRecesso] = useState(0);

  const calcularDados = () => {
    // Calcula quantidade de dias estagiados
    const dataInicio = new Date(inicioEstagio);
    const dataFim = new Date(fimEstagio);
    const umDiaEmMilissegundos = 1000 * 60 * 60 * 24;
    const dias = Math.round(
      (dataFim.getTime() - dataInicio.getTime()) / umDiaEmMilissegundos
    );
    setDiasEstagiados(dias);

    // Calcula quantidade de dias de recesso
    const diasDeRecesso = Math.round(dias / 12);
    setDiasDeRecesso(diasDeRecesso);

    // Calcula previsão do valor da bolsa que receberá no recesso
    const valorDiarioBolsa = valorBolsa / 30;
    const valorBolsaRecesso = Math.round(valorDiarioBolsa * diasDeRecesso);
    setPrevisaoBolsaRecesso(valorBolsaRecesso);
  };

  const compartilharResultados = () => {
    // Obtem os dados a serem compartilhados
    const dadosCompartilhamento = `Dias estagiados: ${diasEstagiados}\nDias de recesso: ${diasDeRecesso}\nPrevisão da bolsa no recesso: R$ ${previsaoBolsaRecesso}`;

    // Cria o link para compartilhamento via WhatsApp
    const linkCompartilhamento = `https://wa.me/?text=${encodeURIComponent(dadosCompartilhamento)}`;

    // Abre a janela do WhatsApp para compartilhamento
    window.open(linkCompartilhamento);
  };

  return (
    <Box
      minW="sm"
      backgroundImage="url('/images/background-image.jpg')"
      backgroundSize="cover">
      <Head>
        <title>Calculadora de Estágio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex height="100vh" justifyContent="center" alignItems="center">
        <Box maxW="sm" bg={useColorModeValue('white', 'gray.700')} borderWidth="1px" borderRadius="lg" p={4}>
          <Text m={6} fontSize="2xl" fontWeight="bold"> Calculadora de recesso </Text>
          <FormControl id="inicioEstagio" mb={2}>
            <FormLabel>Início do estágio</FormLabel>
            <Input
              type="date"
              value={inicioEstagio}
              onChange={(e) => setInicioEstagio(e.target.value)}
            />
          </FormControl>
          <FormControl id="fimEstagio" mb={2}>
            <FormLabel>Fim do estágio</FormLabel>
            <Input
              type="date"
              value={fimEstagio}
              onChange={(e) => setFimEstagio(e.target.value)}
            />
          </FormControl>
          <FormControl id="valorBolsa" mb={2}>
            <FormLabel>Valor da bolsa</FormLabel>
            <InputGroup>
              <InputLeftAddon children="R$" />
              <Input
                type="number"
                value={valorBolsa}
                onChange={(e) => setValorBolsa(e.target.value)}
              />
            </InputGroup>
          </FormControl>
          <Button width='full' colorScheme="blue" onClick={calcularDados} mb={2}>
            Calcular
          </Button>

          <Box mt={2} maxW="sm" borderWidth="1px" borderRadius="lg" p={4}>
            <Text mb={2}>Dias estagiados: {diasEstagiados}</Text>
            <Text mb={2}>Dias de recesso: {diasDeRecesso}</Text>
            <Text mb={2}>
              Previsão da bolsa no recesso: R$ {previsaoBolsaRecesso}
            </Text>
          </Box>
          <Flex flexDirection="column" justifyContent="center" mt={4}>
            <Button colorScheme="green" mb={2} onClick={() => compartilharResultados()}>
              WhatsApp
              <Icon as={FaShareAlt} ml={2} />
            </Button>
            <Button colorScheme="blue" mb={2} onClick={() => window.open(`https://twitter.com/intent/tweet?text=Minha%20previsão%20da%20bolsa%20no%20recesso%20é%20de%20R$${previsaoBolsaRecesso}`)}>
              Twitter
              <Icon as={FaTwitter} ml={2} />
            </Button>
            <Button colorScheme="gray" onClick={() => window.open('https://github.com/paulpessoa/')}>
              Paul Pessoa
              <Icon as={FaGithub} ml={2} />
            </Button>
            <IconButton
              aria-label="Toggle dark mode"
              icon={isDarkMode ? <FaSun /> : <FaMoon />}
              onClick={toggleColorMode}
              position="fixed"
              bottom="4"
              left="4"
              rounded="full"
              size="md"
              colorScheme="gray"
            />
          </Flex>
        </Box>
      </Flex>
    </Box>
  )
}
